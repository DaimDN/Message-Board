[{"C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\index.js":"1","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\App.js":"2","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\display.js":"3","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\error.js":"4","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\util\\api.js":"5","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\Messages.js":"6","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\AddMessage.js":"7"},{"size":179,"mtime":1608158591199,"results":"8","hashOfConfig":"9"},{"size":1170,"mtime":1608167559551,"results":"10","hashOfConfig":"9"},{"size":711,"mtime":1608165319883,"results":"11","hashOfConfig":"9"},{"size":311,"mtime":1608159964448,"results":"12","hashOfConfig":"9"},{"size":200,"mtime":1608161511043,"results":"13","hashOfConfig":"9"},{"size":3507,"mtime":1608168204025,"results":"14","hashOfConfig":"9"},{"size":2070,"mtime":1608167345837,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"9brwrk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\index.js",[],["35","36"],"C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\App.js",["37"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport Display from './components/display';\r\nimport Error from './components/error';\r\nimport api from './util/api';\r\n\r\n function App() {\r\n    \r\nconst [display, setDisplay ] = useState(false);  \r\n\r\nconst [data, setData] = useState(undefined);\r\n\r\nuseEffect(() => {\r\n\r\n    async function getLanding() {\r\n        try {\r\n          const response = await api.get('/');\r\n        \r\n          var HttpStatusCode = response.status;\r\n          \r\n          if(HttpStatusCode === 200){\r\n            var dataset = response.data;\r\n              setData(dataset);\r\n          }\r\n        }\r\n        \r\n        catch (error) {          \r\n            console.log(error);\r\n            setData(undefined);\r\n        }\r\n      }\r\n   \r\n      getLanding(); \r\n\r\n      if(data === undefined){\r\n        setDisplay(false);\r\n      }\r\n      else{\r\n        setDisplay(true);\r\n\r\n      }\r\n});\r\n\r\n\r\n   \r\nif(display === false){\r\n    return (\r\n       <Fragment>\r\n           <Error/>\r\n       </Fragment>\r\n    )\r\n}\r\nelse{\r\n    return (\r\n        <Fragment>\r\n            <Display message={data}/>\r\n        </Fragment>\r\n    )\r\n}}\r\n\r\n\r\nexport default  App;","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\display.js",["38","39"],"import React, { Fragment } from 'react'\r\nimport {useState} from 'react';\r\nimport api from '../util/api';\r\nimport Messages from './Messages';\r\nimport AddMessage from './AddMessage';\r\n\r\n \r\nconst Display = props =>{\r\n\r\n    \r\n\r\n    const [dataset, setDataset] = useState(props);\r\n    return (\r\n        <Fragment>\r\n\r\n       \r\n        <div className=\"container\">\r\n        <div className=\"text-center\">\r\n          <h2>{dataset.message.welcome}</h2>\r\n        </div>\r\n        </div>\r\n        <div style={{marginTop: '22px'}}>\r\n            <AddMessage/>\r\n        </div>\r\n        <div style={{marginTop: '22px'}}>\r\n            <Messages/>\r\n        </div>\r\n        \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Display;","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\error.js",[],"C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\util\\api.js",[],"C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\Messages.js",["40"],"import React, {Fragment, useEffect, useState} from 'react'\r\nimport api from '../util/api';\r\n\r\nfunction Messages() {\r\n    const [messages, setMessage] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n\r\n        async function getMessage() {\r\n            try {\r\n              const response = await api.get('/api/v1');\r\n            \r\n              var HttpStatusCode = response.status;\r\n              \r\n              if(HttpStatusCode === 200){\r\n                var dataset = response.data;\r\n                  setMessage({Messages: dataset});\r\n              }\r\n            }\r\n            \r\n            catch (error) {          \r\n                console.log(error);\r\n                setMessage(undefined);\r\n            }\r\n                }\r\n            getMessage();\r\n    });\r\n\r\n\r\n\r\n        \r\n    const Handler = e => {\r\n        e.preventDefault();\r\n\r\n        async function LoadDummyContent() {\r\n            try {\r\n              const dummy = await api.get('/dummy');\r\n              alert(\"Dummy Contents Updated\")\r\n              \r\n            }\r\n            \r\n            catch (error) {          \r\n                console.log(error);\r\n            }\r\n         }\r\n\r\n         LoadDummyContent();\r\n\r\n\r\n    }\r\n            \r\n\r\n    if(messages === undefined){\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h2>Error Occured</h2>\r\n                </div>\r\n               \r\n      \r\n                </div>\r\n            </Fragment>\r\n\r\n        )\r\n\r\n    }\r\n    else{\r\n\r\n\r\n            if(messages.Messages.length ===0){\r\n\r\n                return(\r\n\r\n                <Fragment>\r\n                     <div className=\"container\">\r\n                        <div className=\"text-center\">\r\n                            <h2>Messages</h2>\r\n                            <p className=\"lead\">No Messages Available</p>\r\n\r\n                            <form onSubmit={Handler}>\r\n                            <button className=\"btn btn-primary btn-lg\">Load Dummy Data</button>\r\n                            </form>\r\n                            \r\n                        </div>\r\n                       \r\n              \r\n                        </div>\r\n                </Fragment>\r\n                )\r\n\r\n            }\r\n            else{\r\n\r\n                return (\r\n                    <Fragment>\r\n                        <div className=\"container\">\r\n                        <div className=\"text-center\">\r\n                            <h2>Messages</h2>\r\n                        </div>\r\n                        <br/>\r\n                        {messages.Messages.map((item)=>{\r\n                            return <div style={{marginBottom: '12px'}} class=\"card\">\r\n                                    <div className=\"container\">\r\n                                    \r\n                                    <div class=\"card-body\">\r\n                                    <h4 style={{marginRight: '20px'}}>  {item.email}</h4>\r\n                                    <br/>\r\n                                    <p className=\"lead\">{item.message} </p>\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n                        })}\r\n                       \r\n              \r\n                        </div>\r\n                    </Fragment>\r\n                  )\r\n            }\r\n\r\n\r\n       \r\n\r\n    }\r\n          \r\n    \r\n       \r\n\r\n    \r\n\r\n   \r\n}\r\n\r\n\r\n\r\nexport default Messages;","C:\\Users\\Daim\\Desktop\\JP Morgan Task\\client\\src\\components\\AddMessage.js",["41"],"import React, {Fragment, useState} from 'react'\r\nimport api from '../util/api';\r\n\r\n\r\nconst AddMessage = ()=> {\r\n    var date = new Date();\r\nvar today = date.toLocaleDateString();\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        message: '',\r\n        key: today\r\n      });\r\n\r\nconst { email, message, key } = formData;\r\n\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n   \r\n    \r\n    const Handler = e => {\r\n        e.preventDefault();\r\n\r\n        var data = {email, message, key};\r\n        \r\n        async function postMessage() {\r\n            try {\r\n              const request = await api.post('/add', data);\r\n              \r\n            }\r\n            \r\n            catch (error) {          \r\n                console.log(error);\r\n            }\r\n         }\r\n         postMessage();\r\n\r\n         setFormData({\r\n             email: '',\r\n             message :'',\r\n             key: today\r\n         })\r\n            \r\n      };\r\n    \r\n\r\n    return (\r\n       \r\n        <Fragment>\r\n            <div className=\"container\">\r\n            \r\n            <form className=\"form\" onSubmit={Handler}>\r\n\r\n            <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            placeholder=\"Enter Message\"\r\n            name=\"message\"\r\n            rows=\"4\"\r\n            value={message}\r\n            onChange={onChange}           \r\n            \r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mr-auto text-right\">\r\n        <button type=\"submit\" className=\"btn btn-primary\" >Post </button> \r\n        </div>\r\n            </form>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default AddMessage;",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":12,"column":1,"nodeType":"48","endLine":12,"endColumn":10,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":8,"nodeType":"48","messageId":"52","endLine":3,"endColumn":11},{"ruleId":"50","severity":1,"message":"53","line":12,"column":21,"nodeType":"48","messageId":"52","endLine":12,"endColumn":31},{"ruleId":"50","severity":1,"message":"54","line":37,"column":21,"nodeType":"48","messageId":"52","endLine":37,"endColumn":26},{"ruleId":"50","severity":1,"message":"55","line":31,"column":21,"nodeType":"48","messageId":"52","endLine":31,"endColumn":28},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDisplay'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [data] as a second argument to the useEffect Hook.","Identifier",["58"],"no-unused-vars","'api' is defined but never used.","unusedVar","'setDataset' is assigned a value but never used.","'dummy' is assigned a value but never used.","'request' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Add dependencies array: [data]",{"range":"61","text":"62"},[913,913],", [data]"]